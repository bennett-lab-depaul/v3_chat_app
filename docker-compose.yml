# ====================================================================
# Three Services
# ====================================================================
#  1) Database (postgres)
#  2) Llama API
#  3) Backend  (websocket server, LLM calls, biomarker logic)
#  4) Frontend (vite, react) 
services:
  # -------------------------------------------------------------------- 
  # 1) Database
  # --------------------------------------------------------------------
  # Backend/Database are only accessable inside the Docker network.
  db:
    image: postgres 
    container_name: db
    env_file: 
      - .env
      - .env.deploy
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      #- POSTGRES_USER=${POSTGRES_USER}
      #- POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=UTC
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet

  # -------------------------------------------------------------------- 
  # 2) Llama API  https://hub.docker.com/r/jflachman/llama-cpp-python   
  # --------------------------------------------------------------------
  llama_api:
    image: jflachman/llama-cpp-python:v0.2.77-cuda  # ghcr.io/ggerganov/llama-cpp-python:v0.2.77-cuda # or cpu
    container_name: llama_api
    restart: unless-stopped
    ports:
      - "11434:11434"
    environment:
      - USE_MLOCK=0
      - MODEL=/models/Phi-3_finetuned.gguf
      - PORT=11434
    volumes:
      - ../deployment-files/models:/models
      - ./llama_api:/config
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    runtime: nvidia
    networks:
      - appnet
    command: >
      --model /models/Phi-3_finetuned.gguf 
      --n_ctx 256 
      --n_gpu_layers -1 
      --n_threads 12 
      --config_file /config/server.config
  
  # --------------------------------------------------------------------
  # 3) Backend (private, no ports exposed)
  # --------------------------------------------------------------------
  # Nginx/Vite proxies traffic here using the container name over the Docker network
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile-backend
    container_name: backend
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        daphne -b 0.0.0.0 -p 8000 backend.asgi:application
      "
    volumes:
      - ./backend:/app                          # general project mount
      - ../deployment-files/logs:/app/logs      # log folder mounted separately
    env_file: 
      - .env
      - .env.deploy
    environment:
      - TZ=UTC
    depends_on:
      - db
      - llama_api
    networks:
      - appnet

  # --------------------------------------------------------------------
  # 4) Frontend
  # --------------------------------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-frontend
    container_name: frontend
    depends_on:
      - backend
    env_file: 
      - .env
      - .env.deploy
    environment:
      - TZ=UTC
    ports:
      - "5173:5173"
    networks:
      - appnet

# ====================================================================
# Volumes & Networks
# ====================================================================
volumes:
  postgres_data:

networks:
  appnet:
