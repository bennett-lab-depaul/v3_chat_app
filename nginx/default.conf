# ====================================================================
# For the "sandbox" version, we just want the two "sandbox" URLs:
#  -> server_name sandbox.cognibot.org www.sandbox.cognibot.org;
# 
# For the "deployment" version, we want the base URLs:
#  -> server_name cognibot.org www.cognibot.org;
# ====================================================================

# HTTP => HTTPS redirect
server {
    listen 80;
    server_name cognibot.org www.cognibot.org;

    # ACME challenge
    location /.well-known/acme-challenge/ { 
        root /var/www/certbot; 
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ====================================================================
# Main Host
# ====================================================================
server {
    listen 443 ssl http2;
    server_name cognibot.org www.cognibot.org;

    ssl_certificate     /etc/letsencrypt/live/cognibot.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cognibot.org/privkey.pem;

    # --------------------------------------------------------------------
    # Frontend (vite/react)
    # --------------------------------------------------------------------
    location / {
        proxy_pass          http://frontend:5173;
        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # --------------------------------------------------------------------
    # Backend API
    # --------------------------------------------------------------------
    location /api/ {
        proxy_pass         http://backend:8000;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # --------------------------------------------------------------------
    # Backend WebSocket
    # --------------------------------------------------------------------
    location /ws/ {
        proxy_pass         http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
